version: '3.8'

services:
  app:
    build: 
      context: https://github.com/Rebelein/RebeleinTask.git
      dockerfile: Dockerfile
    container_name: rebelleintask_app
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://mongo:27017/rebelleintask
      - NEXT_TELEMETRY_DISABLED=1
    expose:
      - "3000"
    depends_on:
      - mongo
    restart: unless-stopped
    networks:
      - rebelleintask_network

  # Nginx HTTPS Proxy
  nginx:
    image: nginx:alpine
    container_name: rebelleintask_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - nginx_ssl:/etc/nginx/ssl
    depends_on:
      - app
      - ssl-gen
    restart: unless-stopped
    networks:
      - rebelleintask_network

  # SSL Certificate Generator
  ssl-gen:
    image: alpine:latest
    container_name: ssl_generator
    volumes:
      - nginx_ssl:/ssl
    command: >
      sh -c "
        apk add --no-cache openssl &&
        if [ ! -f /ssl/cert.pem ]; then
          echo 'Generating self-signed SSL certificate...' &&
          openssl req -x509 -nodes -days 365 -newkey rsa:2048 
            -keyout /ssl/key.pem 
            -out /ssl/cert.pem 
            -subj '/C=DE/ST=Germany/L=City/O=RebeleinTask/OU=IT/CN=rebelleintask.local/emailAddress=admin@rebelleintask.local' 
            -extensions v3_req 
            -config <(echo '[req]'; echo 'distinguished_name=req'; echo '[v3_req]'; echo 'subjectAltName=@alt_names'; echo '[alt_names]'; echo 'DNS.1=localhost'; echo 'DNS.2=rebelleintask.local'; echo 'IP.1=127.0.0.1'; echo 'IP.2=217.154.223.78') &&
          echo 'SSL certificate generated successfully!'
        else
          echo 'SSL certificate already exists.'
        fi
      "
    restart: "no"

  mongo:
    image: mongo:7
    container_name: rebelleintask_mongo
    restart: unless-stopped
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all"]
    environment:
      MONGO_INITDB_DATABASE: rebelleintask
    volumes:
      - mongo_data:/data/db
    ports:
      - "27017:27017"
    networks:
      - rebelleintask_network

  mongo-init-replica:
    image: mongo:7
    depends_on:
      - mongo
    entrypoint: ["sh", "-c", "sleep 10 && mongosh --host mongo:27017 --eval 'rs.initiate({_id:\"rs0\",members:[{_id:0,host:\"mongo:27017\"}]})' || true"]
    restart: "no"
    networks:
      - rebelleintask_network

  mongo-express:
    image: mongo-express:1.0.2-18-alpine3.19
    container_name: rebelleintask_mongo_express
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    depends_on:
      - mongo
    ports:
      - "8081:8081"
    networks:
      - rebelleintask_network

volumes:
  mongo_data:
    driver: local
  nginx_ssl:
    driver: local

networks:
  rebelleintask_network:
    driver: bridge
