version: '3.8'

# Produktive HTTPS-Konfiguration mit echter Domain
# Voraussetzung: Domain zeigt per A-Record auf Server-IP

services:
  app:
    build:
      context: https://github.com/Rebelein/RebeleinTask.git
      dockerfile: Dockerfile
    container_name: rebelleintask_app
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://mongo:27017/rebelleintask
      - NEXT_TELEMETRY_DISABLED=1
    expose:
      - "3000"
    depends_on:
      - mongo
    restart: unless-stopped
    networks:
      - rebelleintask_network

  mongo:
    image: mongo:7
    container_name: rebelleintask_mongo
    restart: unless-stopped
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all"]
    environment:
      MONGO_INITDB_DATABASE: rebelleintask
    volumes:
      - mongo_data:/data/db
    expose:
      - "27017"
    networks:
      - rebelleintask_network

  mongo-init-replica:
    image: mongo:7
    depends_on:
      - mongo
    entrypoint: ["sh", "-c", "sleep 10 && mongosh --host mongo:27017 --eval 'rs.initiate({_id:\"rs0\",members:[{_id:0,host:\"mongo:27017\"}]})' || true"]
    restart: "no"
    networks:
      - rebelleintask_network

  mongo-express:
    image: mongo-express:1.0.2-18-alpine3.19
    container_name: rebelleintask_mongo_express
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    depends_on:
      - mongo
    expose:
      - "8081"
    networks:
      - rebelleintask_network

  # Caddy mit automatischem Let's Encrypt
  caddy:
    image: caddy:alpine
    container_name: rebelleintask_caddy
    depends_on:
      - app
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - caddy_data:/data
      - caddy_config:/config
    environment:
      # WICHTIG: Ersetzen Sie "ihre-domain.de" mit Ihrer echten Domain
      - DOMAIN=ihre-domain.de
    command:
      - sh
      - -c
      - |
        cat <<EOF > /etc/caddy/Caddyfile
        {
          admin off
          email admin@ihre-domain.de
        }

        # HTTP -> HTTPS Redirect
        http://ihre-domain.de {
          redir https://ihre-domain.de{uri}
        }

        # HTTPS mit Let's Encrypt
        https://ihre-domain.de {
          log {
            output stdout
            format console
          }
          reverse_proxy app:3000
        }

        # Mongo Express (optional, nur für Admin)
        https://admin.ihre-domain.de {
          log {
            output stdout
            format console
          }
          reverse_proxy mongo-express:8081
        }
        EOF
        echo "Caddyfile für echte Domain:"; cat /etc/caddy/Caddyfile;
        exec caddy run --config /etc/caddy/Caddyfile --adapter caddyfile
    restart: unless-stopped
    networks:
      - rebelleintask_network

volumes:
  mongo_data:
    driver: local
  caddy_data:
    driver: local
  caddy_config:
    driver: local

networks:
  rebelleintask_network:
    driver: bridge
