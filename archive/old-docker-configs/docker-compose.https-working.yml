version: '3.8'

services:
  app:
    build: 
      context: https://github.com/Rebelein/RebeleinTask.git
      dockerfile: Dockerfile
    container_name: rebelleintask_app
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://mongo:27017/rebelleintask
      - NEXT_TELEMETRY_DISABLED=1
    ports:
      - "3000:3000"  # Keep direct access for debugging
    depends_on:
      - mongo
    restart: unless-stopped
    networks:
      - rebelleintask_network

  mongo:
    image: mongo:7
    container_name: rebelleintask_mongo
    restart: unless-stopped
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all"]
    environment:
      MONGO_INITDB_DATABASE: rebelleintask
    volumes:
      - mongo_data:/data/db
    ports:
      - "27017:27017"
    networks:
      - rebelleintask_network

  mongo-init-replica:
    image: mongo:7
    depends_on:
      - mongo
    entrypoint: ["sh", "-c", "sleep 10 && mongosh --host mongo:27017 --eval 'rs.initiate({_id:\"rs0\",members:[{_id:0,host:\"mongo:27017\"}]})' || true"]
    restart: "no"
    networks:
      - rebelleintask_network

  mongo-express:
    image: mongo-express:1.0.2-18-alpine3.19
    container_name: rebelleintask_mongo_express
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    depends_on:
      - mongo
    ports:
      - "8081:8081"
    networks:
      - rebelleintask_network

  # WORKING SSL Certificate Generator
  ssl-gen:
    image: alpine:latest
    container_name: ssl_generator
    volumes:
      - ssl_data:/ssl
    command: sh -c "apk add --no-cache openssl && echo 'Creating SSL certificate...' && openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /ssl/server.key -out /ssl/server.crt -subj '/CN=217.154.223.78' && echo 'SSL certificate created!' && ls -la /ssl/ && sleep 5"
    restart: "no"

  # WORKING HTTPS Proxy with detailed logging
  https-proxy:
    image: nginx:alpine
    container_name: https_proxy
    ports:
      - "80:80"   # HTTP redirect
      - "443:443" # HTTPS
    volumes:
      - ssl_data:/ssl:ro
    depends_on:
      - app
      - ssl-gen
    command: sh -c "
      echo 'Waiting for SSL certificates...' &&
      sleep 10 &&
      echo 'Creating nginx config...' &&
      mkdir -p /etc/nginx/conf.d &&
      cat > /etc/nginx/conf.d/default.conf << 'EOF'
server {
    listen 80;
    server_name _;
    return 301 https://\$host\$request_uri;
}

server {
    listen 443 ssl;
    server_name _;
    
    ssl_certificate /ssl/server.crt;
    ssl_certificate_key /ssl/server.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    
    # PWA headers
    add_header Service-Worker-Allowed \"/\" always;
    
    location / {
        proxy_pass http://app:3000;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        
        # Connection settings
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
}
EOF
      echo 'Testing nginx configuration...' &&
      nginx -t &&
      echo 'Starting nginx...' &&
      nginx -g 'daemon off;'
    "
    restart: unless-stopped
    networks:
      - rebelleintask_network

volumes:
  mongo_data:
    driver: local
  ssl_data:
    driver: local

networks:
  rebelleintask_network:
    driver: bridge
